{
    "collab_server" : "",
    "contents" : "library(arules)\nlibrary(arulesViz)\nlibrary(readr)\nlibrary(Matrix)\nlibrary(grid)\nlibrary(cluster)\n\n## combine rules rComb <- c(r1, r2)\n## union of rules rUnion <- union(r1,r2)\n\n\n\ndata(\"Groceries\")\nct <- crossTable(Groceries, sort=TRUE)\nct[1:5, 1:5]\nsp <- crossTable(Groceries, measure=\"support\", sort=TRUE)\nsp[1:5,1:5]\nlift <- crossTable(Groceries, measure=\"lift\", sort=TRUE)\nlift[1:5,1:5]\nchi2 <- crossTable(Groceries, measure=\"chiSquared\", sort=TRUE)\nchi2[1:5,1:5]\n\n\n###\n\nraw = read_csv(\"~/Test/Accidents_2015.csv\" )\n\n### Data Cleaning\n##raw$Accident_Index <- factor(raw$Accident_Index)\nraw$Accident_Index <- NULL\n\n\n##raw$Location_Easting_OSGR <- as.factor(as.numeric(raw$Location_Easting_OSGR))\n##raw$Location_Northing_OSGR <- as.factor(as.numeric(raw$Location_Northing_OSGR))\nraw$Location_Easting_OSGR <- NULL\nraw$Location_Northing_OSGR <- NULL\n\nraw$Longitude <- discretize(raw$Longitude ,categories = 50, onlycuts=FALSE)\nraw$Latitude <- discretize(raw$Latitude ,categories = 50, onlycuts=FALSE)\n\nraw$Police_Force <- discretize(raw$Police_Force ,categories=4  )\nraw$Police_Force <- as.factor(as.numeric(raw$Police_Force))\n\n\nraw$Accident_Severity <- factor(raw$Accident_Severity,labels=c(\"Fatal\",\"Serious\",\"Slight\"))\n\n##raw$Date <- as.Date(sprintf(\"%s\", raw$Date), format =\"%Y%m%d\")\nraw$Date <- NULL\nraw$Time <- NULL\nraw$Number_of_Vehicles[raw$Number_of_Vehicles<0 | raw$Number_of_Vehicles > 6 ] <- NA\nraw$Number_of_Vehicles <- as.factor(raw$Number_of_Vehicles)\n\nraw$Number_of_Casualties [raw$Number_of_Casualties<0 | raw$Number_of_Casualties>38]\nraw$Number_of_Casualties <- as.factor(raw$Number_of_Casualties)\n\n##raw$Day_of_Week[raw$Day_of_Week <1 | raw$Day_of_Week>7] <- NA\n##raw$Day_of_Week <- as.factor(raw$Day_of_Week)\nraw$Day_of_Week <- NULL\n\nraw$'Local_Authority_(District)' <- NULL\nraw$'Local_Authority_(Highway)'<- NULL\nraw$'1st_Road_Class' <- as.factor(raw$'1st_Road_Class')\nraw$'1st_Road_Number' <- NULL\nraw$`2nd_Road_Class` <- as.factor(raw$`2nd_Road_Class`)\nraw$`2nd_Road_Number` <- NULL\nraw$`Pedestrian_Crossing-Human_Control` <- NULL\nraw$`Pedestrian_Crossing-Physical_Facilities` <- NULL\n\n\nraw$Junction_Detail <- NULL\nraw$Junction_Control <- NULL\n\nraw$Road_Type <- as.factor(raw$Road_Type)\nraw$Speed_limit <- as.factor(raw$Speed_limit)\n\n\n\n##raw$Urban_or_Rural_Area[raw$Urban_or_Rural_Area < 0 | raw$Urban_or_Rural_Area > 2] <- NA\n##raw$Urban_or_Rural_Area <- factor(raw$Urban_or_Rural_Area,labels=c(\"Urban\",\"Rural\"))\nraw$Urban_or_Rural_Area <- NULL\n\nraw$Weather_Conditions[raw$Weather_Conditions < 1 | raw$Weather_Conditions > 7] <- NA\nraw$Weather_Conditions <- factor(raw$Weather_Conditions,labels=c(\"Fine no high winds\",\"Raining no high winds\",\"Snowing no high winds\",\"Fine + high winds\",\"Raining + high winds\",\"Snowing + high winds\",\"Fog or mist\"))\n\nraw$Light_Conditions <- as.factor(raw$Light_Conditions)\nraw$Road_Surface_Conditions <- as.factor(raw$Road_Surface_Conditions)\n\n##raw$Special_Conditions_at_Site <- as.factor(raw$Special_Conditions_at_Site)\nraw$Special_Conditions_at_Site <- NULL\nraw$Carriageway_Hazards <- NULL\nraw$Did_Police_Officer_Attend_Scene_of_Accident <- NULL\n\n\n##raw$LSOA_of_Accident_Location <- as.factor(raw$LSOA_of_Accident_Location)\nraw$LSOA_of_Accident_Location <- NULL\n\nprepared <- raw[complete.cases(raw),]\ntrans = as(prepared, \"transactions\")\n\n## get sample and calc dissimilarity\nset.seed(1234)\ns <- sample(trans, 20000)\nd <- dissimilarity(s, method = \"cosine\")\nclustering <- pam(d, k = 2)\nplot(clustering)\n\nslightSeverity <- subset(trans,items %in% \"Accident_Severity=Slight\")\nseriousSeverity <- subset(trans,items %in% \"Accident_Severity=Serious\" | items %in% \"Accident_Severity=Fatal\")\nseriousSeverity.freqItems <- apriori(seriousSeverity, parameter= list(support=0.4, target= \"frequent itemsets\"))\nquality(seriousSeverity.freqItems)$lift <- interestMeasure(seriousSeverity.freqItems, measure=\"lift\", trans = trans)\n\nslightSeverity.OneCasuality <- subset(slightSeverity,items %in% \"Number_of_Casualties=1\" & items %in% \"Accident_Severity=Slight\")\n\n\nitemFrequencyPlot(slightSeverity, topN=25,population=trans,  cex.names=.5)\nitemFrequencyPlot(seriousSeverity, topN=25,population=trans,  cex.names=.5)\n\n\nfrequentItems <- apriori(trans, parameter= list(support=0.4, target= \"frequent itemsets\"))\nfrequentItems.sorted <- sort(frequentItems, by=\"support\")\nquality(frequentItems)$lift <- interestMeasure(frequentItems, measure=\"lift\", trans = trans)\n##inspect(head(sort(frequentItems, by = \"lift\"), n=10))\n\n\nrules.sub_slight = apriori(slightSeverity,parameter = list(supp = 0.5, conf = 0.9, target = \"rules\"))\nrules.sub_seriousSeverity = apriori(seriousSeverity,parameter = list(supp = 0.5, conf = 0.9, target = \"rules\"))\n",
    "created" : 1489253272438.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3995087558",
    "id" : "78E8F70B",
    "lastKnownWriteTime" : 1489336557,
    "last_content_update" : 1489336558760,
    "path" : "~/DataMining/main.R",
    "project_path" : "main.R",
    "properties" : {
        "docOutlineVisible" : "0",
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}